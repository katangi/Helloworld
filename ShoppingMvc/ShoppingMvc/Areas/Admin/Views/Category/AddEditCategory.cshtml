@model ShoppingMvc.Models.Catogery

<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<style>
    .myvalidation {
    color: red;
}
</style>
@using (Html.BeginForm("Create", "Category", new { area = "Admin" }, FormMethod.Post))
{
        <style type="text/css">
        .lable {
            margin-left: 50px;
        }
    </style>
    @Html.AntiForgeryToken()

    <div class="modal-dialog">
        <div class="modal-content">
            @Html.AntiForgeryToken()
            <div class="modal-header">
              
                <div class="alert alert-success" role="alert">
                    @if (Model.Id != 0)
                    {
                        <h4 class="modal-title" style="text-align: center">Edit Category</h4>
                    }
                    else
                    {
                        <h4 class="modal-title" style="text-align: center">Add Category</h4>
                    }


                </div>

            </div>
            <div class="modal-body" style="width:500px;height:250px;">
                @Html.ValidationSummary(true)
                @Html.HiddenFor(model => model.Id)
             
                <form role="form">

                    <div class="form-group lable">
                        <label for="recipient-name" class="control-label">Category Name:</label>


                        @Html.TextBoxFor(model => model.CategoryName, new { @class = "form-control ", @style = "width: 75%; height:30px;" })
                        <br />
                        @Html.ValidationMessageFor(model => model.CategoryName,"", new { @class = "myvalidation" })
                    </div>

                    <div class="form-group lable">
                        <label for="recipient-name" class="control-label">Description:</label>
                        @Html.TextBoxFor(model => model.Description, new { @class = "form-control ", @style = "width: 75%; height:30px;" })
                        <br />
                        @Html.ValidationMessageFor(model => model.Description,"", new { @class = "myvalidation" })

                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" id="modalClose" data-dismiss="modal" class="btn btn-default">Close</button>
                <button type="submit" class="btn btn-success">Save Category</button>
            </div>
        </div>
    </div>
}